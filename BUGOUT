#!/usr/bin/env python3

from utils import slow_output, binary_types, ascii_types, user_types, read_bugin
from os.path import isdir
from os import listdir

slow_output('''
WELCOME TO BUGOUT V 0.0.1

WRITTEN BY GREG MEYER, 2018

''')

slow_output('''PLEASE INPUT DIRECTORY NAME: ''')
directory = input()
while not isdir(directory):
    slow_output('''INVALID DIRECTORY. TRY AGAIN: ''')
    directory = input()

file_types = list(binary_types) + \
             list(ascii_types) + \
             list(user_types)
file_types.sort()

files = listdir(directory)
valid_files = [f for f in files if f in file_types]

if not valid_files:
    slow_output('''NO BUGIN OUTPUT FILES FOUND IN DIRECTORY. EXITING...''')
    exit()

slow_output('''\nCHOOSE A FILE:\n\n''')

for n,f in enumerate(valid_files):
    slow_output('  %d. %s\n' % (n+1, f))

slow_output('\nINPUT A NUMBER: ')
try:
    choice = int(input())-1
except ValueError:
    choice = -1
while choice not in range(len(valid_files)):
    slow_output('INPUT MUST BE A NUMBER BETWEEN 1 AND %d: ' % len(valid_files))
    try:
        choice = int(input())-1
    except ValueError:
        choice = -1

file_type = valid_files[choice]

result = read_bugin(directory, file_type)

for n,r in enumerate(result):
    slow_output('''\n\nRECORD %d/%d\n''' % (n+1,len(result)))
    maxlen = max(len(k) for k in r)
    for k,v in r.items():
        slow_output(('    %-'+str(maxlen+1)+'s: %s\n') % (k.upper(), str(v)))

slow_output('\n\n')

slow_output('THANK YOU FOR USING BUGOUT. GOODBYE.\n\n')
